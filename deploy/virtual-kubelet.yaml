---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: provider-data
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: virtual-kubelet-config
  namespace: kube-system
data:
  provider.yml: |
    apiVersion: v1
    cloud:
      aws:
        region: "us-east-1"
        accessKeyID: ""
        secretAccessKey: ""
        imageOwnerID: 689494258501
    etcd:
      internal:
        dataDir: /opt/milpa/data
    cells:
      defaultInstanceType: "t3.nano"
      defaultVolumeSize: "20G"
      nametag: virtual-kubelet
    kubelet:
      cpu: "20"
      memory: "512Gi"
      pods: "200"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vk-network-agent
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: vk-network-agent
  namespace: kube-system
rules:
  - apiGroups:
    - ""
    resources:
      - namespaces
      - pods
      - services
      - nodes
      - endpoints
    verbs:
      - list
      - get
      - watch
  - apiGroups:
    - "networking.k8s.io"
    resources:
      - networkpolicies
    verbs:
      - list
      - get
      - watch
  - apiGroups:
    - extensions
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - kip.elotl.co
    resources:
    - cells
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - deletecollection
      - patch
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: vk-network-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vk-network-agent
subjects:
- kind: ServiceAccount
  name: vk-network-agent
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: vk-network-agent
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: vk-network-agent
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtual-kubelet
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: virtual-kubelet
roleRef:
  kind: ClusterRole
  name: system:node
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: virtual-kubelet
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: virtual-kubelet
  name: virtual-kubelet
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-kubelet
  template:
    metadata:
      labels:
        app: virtual-kubelet
    spec:
      containers:
      - command:
        - /virtual-kubelet
        - --provider
        - cloud-instance-provider
        - --provider-config
        - /etc/virtual-kubelet/provider.yml
        - --network-agent-secret
        - kube-system/vk-network-agent
        - --klog.logtostderr
        - --klog.v=5
        image: elotl/virtual-kubelet:dev
        imagePullPolicy: Always
        name: virtual-kubelet
        env:
        - name: KUBELET_PORT
          value: "10666"
        - name: APISERVER_CERT_LOCATION
          value: /etc/kubelet-pki/kubelet.crt
        - name: APISERVER_KEY_LOCATION
          value: /etc/kubelet-pki/kubelet.key
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: "2"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        volumeMounts:
        - name: data
          mountPath: /opt/milpa/data
        - name: server-yml
          mountPath: /etc/virtual-kubelet
        - name: kubelet-pki
          mountPath: /etc/kubelet-pki
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        securityContext:
          privileged: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: virtual-kubelet
      hostNetwork: true
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: provider-data
      - name: kubelet-pki
        hostPath:
          path: /var/lib/kubelet/pki
          type: Directory
      - name: server-yml
        configMap:
          name: virtual-kubelet-config
          items:
          - key: provider.yml
            path: provider.yml
            mode: 0600
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: ""
